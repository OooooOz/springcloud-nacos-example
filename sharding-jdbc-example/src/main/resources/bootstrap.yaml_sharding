server:
  port: 8089

spring:
  main:
    # 分表时，一个实体类对应两张表，避免启动保错
    allow-bean-definition-overriding: true
  application:
    name: sharding-jdbc-example

    # 可以在nacos中配置：两个库进行分表
  shardingsphere:
    datasource:
      # 配置数据源，给数据源起名称
      names: m1,m2
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.182.128:3308/test?characterEncoding=utf8&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC
        username: root
        password: 123456
      m2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.182.128:3307/test?characterEncoding=utf8&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC
        username: root
        password: 123456

    sharding:
      # 指定默认策略：指定数据库分片策略 约定user_id是偶数添加m1，是奇数添加m2
      #        default-database-strategy:
      #          inline:
      #            sharding-column: user_id
      #            algorithm-expression: m$->{user_id % 2 + 1}

      tables:
        course:
          #course表的分库策略，约定user_id是偶数添加m1，是奇数添加m2
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: m$->{user_id % 2 + 1}

          #指定数据库里面表分布情况 m1  m2    course_1 course_2
          actual-data-nodes: m$->{1..2}.course_$->{1..2}
          key-generator:
            # c_id 生成策略  SNOWFLAKE
            column: c_id
            type: SNOWFLAKE
          table-strategy:
            # 指定分片策略  约定c_id值偶数添加到course_1表，如果c_id是奇数添加到course_2表
            inline:
              sharding-column: c_id
              algorithm-expression: course_$->{c_id % 2 + 1}
    props:
      sql:
        # 打开sql输出日志
        show: true
#  cloud:
#    nacos:
#      # 配置
#      config:
#        # Nacos地址
#        server-addr: 127.0.0.1:8848
#        namespace: dev  # 命名空间，填ID
#        file-extension: yaml
#      discovery:
#        # Nacos地址
#        server-addr: 127.0.0.1:8848
#        namespace: dev  # 命名空间，填ID

#mybatis:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl